// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesforceAPI.Data;

#nullable disable

namespace SalesforceAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240625090302_CreateInitialDb")]
    partial class CreateInitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesforceAPI.Models.CredentialingContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactPersonRole")
                        .HasColumnType("int");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CredentialingProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PrimaryContact")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CredentialingContacts");
                });

            modelBuilder.Entity("SalesforceAPI.Models.DirectService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsCertification")
                        .HasColumnType("bit");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DirectServices");
                });

            modelBuilder.Entity("SalesforceAPI.Models.OrganizationalCredentialingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccreditationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AccreditationStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AccreditingBody")
                        .HasColumnType("int");

                    b.Property<int?>("Actionpendingcurrentaccreditation")
                        .HasColumnType("int");

                    b.Property<int?>("Actionpendingorglicense")
                        .HasColumnType("int");

                    b.Property<string>("Attestationbytheapplicantofthecorr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Canyouperformtheessentialdutiesof")
                        .HasColumnType("int");

                    b.Property<bool?>("CertificateofLiability")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CertificateofLiabilityExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("CommercialLiability")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CommercialLiabilityExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("CulturalCompetences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CulturalCompetenciesPicklist")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentMalpracticeInsuranceCoverage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CyberLiabilityExpirationifapplicable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CyberLiabilityStatusifapplicable")
                        .HasColumnType("int");

                    b.Property<bool?>("CyberLiabilityifapplicable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DisclosureFormExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisclosureFormStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplanationHistoryoffelonyconvictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationcurrentaccreditation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationfiveyearhistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Explanationorgaccreditationlimited")
                        .HasColumnType("int");

                    b.Property<string>("ExplanationorgdefendantSUDpayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationorginsuranceinitiallyrefused")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationorglicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplanationorgmalpracticeclaimsSUD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationorgmedicaidsanctions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanationorgmedicaresanctions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Fiveyearhistoryorgliability")
                        .HasColumnType("int");

                    b.Property<string>("Historyoffelonyconvictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Historyoflossoflicense")
                        .HasColumnType("int");

                    b.Property<string>("Historyoflossorlimitationsofprivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressStreet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressZipcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Lackofpresentillegaldruguse")
                        .HasColumnType("int");

                    b.Property<string>("LanguagesSpoken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MedicareNumber")
                        .HasColumnType("bigint");

                    b.Property<bool?>("MedicareProvider")
                        .HasColumnType("bit");

                    b.Property<string>("NPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddressStreet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddressZipcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Orgaccreditationlimited")
                        .HasColumnType("int");

                    b.Property<int?>("OrgdefendantSUDpayment")
                        .HasColumnType("int");

                    b.Property<int?>("Orginsuranceinitiallyrefused")
                        .HasColumnType("int");

                    b.Property<int?>("OrgmalpracticeclaimsSUD")
                        .HasColumnType("int");

                    b.Property<int?>("Orgmedicaidsanctions")
                        .HasColumnType("int");

                    b.Property<int?>("Orgmedicaresanctions")
                        .HasColumnType("int");

                    b.Property<string>("OtherSpecialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PleaseacknowledgeIfdeniedcredential")
                        .HasColumnType("bit");

                    b.Property<bool?>("Pleaseindicateifyouhaveaspeciality")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProfessionalLiabilityExpiration")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ProofofAccreditation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProofofAccreditationExpiration")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ProofofAccreditationStatus")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("Specialties")
                        .HasColumnType("int");

                    b.Property<long?>("TaxID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("W9Expiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("W9Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Whenwasthelastaccreditationsurvey")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkersCompensationExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("X6MonthGapActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("X6MonthGapEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("X6MonthGapReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("X6MonthGapStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("X6monthgapinemploymentsinceprofess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrganizationalCredentialingProfiles");
                });

            modelBuilder.Entity("SalesforceAPI.Models.OrganizationalPrimarySourceVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Atleastfiveyearhistoryoforganizati")
                        .HasColumnType("bit");

                    b.Property<bool?>("CVO")
                        .HasColumnType("bit");

                    b.Property<string>("CredentialingProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Disciplinarystatuswithregulatoryboar")
                        .HasColumnType("bit");

                    b.Property<int?>("LARALicense")
                        .HasColumnType("int");

                    b.Property<bool?>("LARAUploaded")
                        .HasColumnType("bit");

                    b.Property<bool?>("MDHHSSanctionedProviderCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfficeofInspectorGeneralCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnSiteQualityAssessmentRecredential")
                        .HasColumnType("bit");

                    b.Property<string>("OtherAccred")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimarySourceVerifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProofofAccreditation")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<bool?>("SAMgovCheck")
                        .HasColumnType("bit");

                    b.Property<int?>("VerifiersCredentialingOrganization")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrganizationalPrimarySourceVerifications");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ProviderKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CredentialingProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncompassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PractitionerGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProviderKeys");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ServiceLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccomodationsAccessibility")
                        .HasColumnType("int");

                    b.Property<string>("AccomodationsAccessibilityOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CredentialingProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FacilityLicenseExpirationifapplicab")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityLicenseNumberifapplicable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityLicenseStatusifapplicable")
                        .HasColumnType("int");

                    b.Property<bool?>("FacilityLicenseifapplicable")
                        .HasColumnType("bit");

                    b.Property<string>("HoursofOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LicensedFacility")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceLocations");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ServiceLocationLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CredentialingProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceLicenseExpirationifapplicabl")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceLicenseNumberifapplicable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceLicenseStatusifapplicable")
                        .HasColumnType("int");

                    b.Property<string>("ServiceLocations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceLocationLicenses");
                });
#pragma warning restore 612, 618
        }
    }
}
